arna_base:
# Publish all joint states -----------------------------------
  joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50 


  arna_base_controller:
    type: "mecanum_drive_controller/MecanumDriveController"
    # CHANGED LEFT TO RIGHT FOR MAPPING
    # CHANGE BACK IF NECESSARY
    # CHANGE LYDAR SENSOR IN RVIZ IF WHEELS ARE CHANGED
    front_left_wheel_joint: "fr_joint"
    back_left_wheel_joint: "br_joint"
    front_right_wheel_joint: "fl_joint"
    back_right_wheel_joint: "bl_joint"
    publish_rate: 50
    pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]
    # cmd_vel_timeout: 0.25

    # Override URDF look-up for wheel separation since the parent link is not the base_link.
    wheel_separation_x: 0.62634 
    wheel_separation_y: 0.74168

    # Odometry fused with IMU is published by robot_localization, so
    # no need to publish a TF based on encoders alone.
    # enable_odom_tf: false
    enable_odom_tf: true

    # Wheel separation and radius multipliers
    wheel_separation_multiplier: 1.0 # default: 1.0
    wheel_radius_multiplier    : 1.0 # default: 1.0

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 1.1   # m/s
        has_acceleration_limits: true
        max_acceleration       : 2.5   # m/s^2
      y:
        has_velocity_limits    : true
        max_velocity           : 1.1   # m/s
        has_acceleration_limits: true
        max_acceleration       : 2.5   # m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 2.0   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 1.0   # rad/s^2

  # ekf_localization:
  #   frequency: 50
  #   two_d_mode: true
  #   odom0: /ridgeback_velocity_controller/odom
  #   odom0_config: [false, false, false,
  #                  false, false, false,
  #                  true, true, false,
  #                  false, false, true,
  #                  false, false, false]
  #   odom0_differential: false
  #   imu0: /imu/data
  #   imu0_config: [false, false, false,
  #                 false, false, false,
  #                 false, false, false,
  #                 false, false, true,
  #                 true, true, false]
  #   imu0_differential: false
  #   odom_frame: odom
  #   base_link_frame: base_link
  #   world_frame: odom



  # Velocity Controllers ----------------------------------------

  # fl_joint_velocity_controller:
  #   type: effort_controllers/JointVelocityController
  #   joint: fl_joint
  #   pid: {p: 10.0, i: 0.01, d: 10.0}
  # fr_joint_velocity_controller:
  #   type: effort_controllers/JointVelocityController
  #   joint: fr_joint
  #   pid: {p: 10.0, i: 0.01, d: 10.0}
  # bl_joint_velocity_controller:
  #   type: effort_controllers/JointVelocityController
  #   joint: bl_joint
  #   pid: {p: 10.0, i: 0.01, d: 10.0}
  # br_joint_velocity_controller:
  #   type: effort_controllers/JointVelocityController
  #   joint: br_joint
  #   pid: {p: 10.0, i: 0.01, d: 10.0}
 

  # Diff_Drive Controller ----------------------------------------

  # diffa_drive_controller:
  #   type: "diff_drive_controller/DiffDriveController"
  #   publish_rate: 50

  #   left_wheel: ['bl_joint', 'fl_joint']
  #   right_wheel: ['br_joint', 'fr_joint']

  #   wheel_separation: 0.74168

  # # Odometry covariances for the encoder output of the robot. These values should
  # # be tuned to your robot's sample odometry data, but these values are a good place
  # # to start
  #   pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
  #   twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

  # # Top level frame (link) of the robot description
  #   base_frame_id: base_link

  # # Velocity and acceleration limits for the robot
  #   linear:
  #     x:
  #       has_velocity_limits    : true
  #       max_velocity           : 0.2   # m/s
  #       has_acceleration_limits: true
  #       max_acceleration       : 0.6   # m/s^2
  #   angular:
  #     z:
  #       has_velocity_limits    : true
  #       max_velocity           : 2.0   # rad/s
  #       has_acceleration_limits: true
  #       max_acceleration       : 6.0   # rad/s^2



